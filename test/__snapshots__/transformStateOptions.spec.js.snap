// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformStateOptions does not transform objects 1`] = `"<div options={{ foo: \\"bar\\" }} />;"`;

exports[`transformStateOptions throws a syntax error setter is not closed 1`] = `
"test.js: Unexpected end of input
> 1 | <div options=\\"foo(bar\\" />
    |                      ^"
`;

exports[`transformStateOptions throws a syntax error setter is not end of statement 1`] = `
"test.js: Expected end of input
> 1 | <div options=\\"foo(bar)lol\\" />
    |                       ^"
`;

exports[`transformStateOptions throws a syntax error when scope is deeper than 1 1`] = `
"test.js: Unexpected token /
> 1 | <div options=\\"foo/bar/baz\\" />
    |                      ^"
`;

exports[`transformStateOptions throws a syntax error when setters are nested 1`] = `
"test.js: Unexpected token (
> 1 | <div options=\\"foo(bar())\\" />
    |                      ^"
`;

exports[`transformStateOptions throws when a colon is being used 1`] = `
"test.js: Unexpected token :
> 1 | <div options=\\"bar:foo(bar)\\" />
    |                  ^"
`;

exports[`transformStateOptions throws when a semicolon is being used 1`] = `
"test.js: Unexpected token ;
> 1 | <div options=\\"bar;foo(bar)\\" />
    |                  ^"
`;

exports[`transformStateOptions transforms a simple state getter 1`] = `
"<div options={{
  key: \\"foo\\"
}} />;"
`;

exports[`transformStateOptions transforms a state getter with scope 1`] = `
"<div options={{
  scope: \\"foo\\",
  key: \\"bar\\"
}} />;"
`;

exports[`transformStateOptions transforms a state setter 1`] = `
"<div options={{
  setter: \\"toggle\\",
  key: \\"foo\\"
}} />;"
`;
